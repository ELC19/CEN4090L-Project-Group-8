/*Necessary objects in scene:
 UI Image that covers entire screen- for flashImage
 Interactable layer over animals- enables detection & removal via Interact() (need code for transferring to journal)
Animator- self explanatory
antagonist- If we add, make sure to label so we can photo while he's on screen too.
 */
using UnityEngine;
using UnityEngine.UI;
using System.Collections;

public class CameraBehavior: MonoBehavior
{
    public Animator animator;
    public Layermask interactablelayer;
    public float flashduration = 0.5f;
    public Color flashcolor = new Color(1f, 1f, 1f, 1f);
    public GameObject antagonist;
    void Update()
    {
        if (Input.GetKeyDown(KeyCode.Space))
        {
            Interact();
        }
    }
    void Interact()
    {
        var facingDir = new Vector2(animator.GetFloat("moveX"), animator.GetFloat("moveY"));
        var interactPos = transform.position + facingDir;

        //Debug.DrawLine(transform.position, interactPos, Color.red, 1f);
        Collider2D collider = Physics2D.OverlapCircle(interactPos, 0.2f, interactableLayer);
        if (collider != null)
        {
            StartCoroutine(WaitForEEE(collider.gameObject.tag, 10f));
            TakePhoto();
              /*  if (Input.GetKeyDown(KeyCode.E))
                {
                    AddItemToInventory(collider.gameObject.tag); //tag for which animal
                    Destroy(collider.gameObject);
                }*/
                
        } else if(IsAntagonistVisible())
        {
            TakePhoto();
            FlashAntagonist();
        }
    }
    bool IsAntagonistVisible()
    {
        Vector3 screenPoint = Camera.main.WorldToViewportPoint(antagonist.transform.position);
        return screenPoint.z > 0 && screenPoint.x > 0 && screenPoint.x < 1 && screenPoint.y > 0 && screenPoint.y < 1;
    }
    public void TakePhoto()
    {
        StartCoroutine(FlashEffect());
    }
    IEnumerator FlashEffect()
    {
        flashImage.color = flashcolor;
        flashImage.enabled = true;
        float fadespeed = if / flashduration;
        while (flashImage.color.a > 0)
        {
            Color newcolor = flashImage.color;
            newcolor.a -= fadespeed * Time.deltaTime;

            flashImage.color = newcolor;
            yield return null;
        }
        flashImage.enabled = false;
    }

IEnumerator WaitForEEE(string objectTag, float duration)
{
    bool eKeyPressed = false;
    float timer = 0f;
    while (timer < duration && !eKeyPressed)
    {
        if (Input.GetKeyDown(KeyCode.E))
        {
            eKeyPressed = true;
        }

        timer += Time.deltaTime;
        yield return null;
    }
    if (eKeyPressed)
    {
        AddItemToInventory(objectTag);
    }
    Destroy(collider.gameObject);

}
    void FlashAntagonist()
    {
        antagonist.GetComponent<AntagonistAI>().slow();
    }
    void AddItemToInventory(string tag)
    {
        Inventory inventory = FindObjectOfType<Inventory>();
        ItemType itemType= ItemType.Flower;
        switch (tag)
        {
            case "Flower":
                itemType = ItemType.Flower;
                break;
            case "Key":
                itemType = ItemType.Key;
                break;
            case "Deer":
                itemType = ItemType.Deer;
                break;
            case "Panther":
                itemType = ItemType.Panther;
                break;
            case "Alligator":
                itemType = ItemType.Alligator;
                break;
            case "Spoonbill":
                itemType = ItemType.Spoonbill;
                break;
            case "Bullfrog":
                itemType = ItemType.Bullfrog;
                break;
            case "Blackbear":
                itemType = ItemType.Bullfrog;
                break;
            case "Otter":
                itemType = ItemType.Otter;
                break;
            case "Yellowbelly":
                itemType = ItemType.Yellowbelly;
                break;
        }
        inventory.AddItem(new Item { itemType = itemType, amount = 1 });
    }
}
}
